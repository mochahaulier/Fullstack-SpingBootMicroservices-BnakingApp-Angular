spring.application.name=clientproduct-service

# Hibernate properties
# spring.jpa.hibernate.ddl-auto=create-drop 
spring.jpa.hibernate.ddl-auto=update

# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html
# /api-docs endpoint custom path
springdoc.api-docs.path=/api-docs

# from render.com
spring.datasource.url = jdbc:postgresql://${env.POSTGRESQL_CLUSTER}/${env.POSTGRESQL_DATABASE}
spring.datasource.username=${env.POSTGRESQL_USER}
spring.datasource.password=${env.POSTGRESQL_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# For Spring Boot to use EhCache
spring.cache.jcache.config=classpath:ehcache.xml

server.port = 8085
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka


# circuit breaker
management.health.circuitbreakers.enabled= true
management.health.ratelimiters.enabled= true

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true
management.zipkin.tracing.endpoint=http://tempo:9411
management.tracing.sampling.probability=1.0


management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=client-service

# resilience4j properties
resilience4j.circuitbreaker.instances.clientService.register-health-indicator=true
resilience4j.circuitbreaker.instances.clientService.sliding-window-size=10
resilience4j.circuitbreaker.instances.clientService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.clientService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.clientService.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.clientService.ignore-exceptions[0]=dev.mochahaulier.clientproductservice.exception.ClientNotFoundException
resilience4j.circuitbreaker.instances.productService.register-health-indicator=true
resilience4j.circuitbreaker.instances.productService.sliding-window-size=10
resilience4j.circuitbreaker.instances.productService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.productService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.productService.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.productService.ignore-exceptions[0]=dev.mochahaulier.clientproductservice.exception.ProductNotFoundException

# resilience4j timeout properties
resilience4j.timelimiter.instances.clientService.timeout-duration=3s
resilience4j.timelimiter.instances.productService.timeout-duration=3s

# resilience4j retry properties
resilience4j.retry.instances.clientService.max-attempts=3
resilience4j.retry.instances.clientService.wait-duration=500ms
resilience4j.retry.instances.clientService.ignore-exceptions[0]=dev.mochahaulier.clientproductservice.exception.ClientNotFoundException
resilience4j.retry.instances.productService.max-attempts=3
resilience4j.retry.instances.productService.wait-duration=500ms
resilience4j.retry.instances.productService.ignore-exceptions[0]=dev.mochahaulier.clientproductservice.exception.ProductNotFoundException

# Kafka properties
spring.kafka.bootstrap-servers=kafka-1:19092,kafka-2:19092,kafka-3:19092
spring.kafka.template.default-topic=accountCreateTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
# spring.kafka.producer.properties.spring.json.type.mapping=event:dev.mochahaulier.clientproductservice.event.ClientProductCreatedEvent
spring.kafka.producer.properties.schema.registry.url=http://schema-registry:8081

spring.devtools.restart.enabled=false

# Loki URL
loki.url=http://loki:3100/loki/api/v1/push


client.service.url=http://client-service
product.service.url=http://product-service