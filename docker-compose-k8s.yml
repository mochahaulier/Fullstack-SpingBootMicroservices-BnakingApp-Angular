services:
  mysql:
    image: mysql:latest
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=keycloak
      - MYSQL_USER=keycloak
      - MYSQL_PASSWORD=password
    ports:
      - "3306:3306"
    networks:
      - bankingapp-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: [ "start-dev", "--import-realm" ]
    environment:
      - DB_VENDOR=MYSQL
      - DB_ADDR=mysql
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=password
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_FRONTEND_URL=http://keycloak:8080
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - mysql
    networks:
      - bankingapp-network

  kafka-1:
    image: apache/kafka:latest
    hostname: kafka-1
    ports:
      - 29092:9092
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES='broker,controller'
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP='CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      - KAFKA_CONTROLLER_QUORUM_VOTERS='1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
      - KAFKA_LISTENERS='PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092'
      - KAFKA_INTER_BROKER_LISTENER_NAME='PLAINTEXT'
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:19092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CONTROLLER_LISTENER_NAMES='CONTROLLER'
      - CLUSTER_ID='4L6g3nShT-eMCtK--X86sw'
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_LOG_DIRS='/tmp/kraft-combined-logs'
    networks:
      - bankingapp-network

  kafka-2:
    image: apache/kafka:latest
    hostname: kafka-2
    ports:
      - 39092:9092
    environment:
      - KAFKA_NODE_ID=2
      - KAFKA_PROCESS_ROLES='broker,controller'
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP='CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      - KAFKA_CONTROLLER_QUORUM_VOTERS='1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
      - KAFKA_LISTENERS='PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092'
      - KAFKA_INTER_BROKER_LISTENER_NAME='PLAINTEXT'
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:19092,PLAINTEXT_HOST://localhost:39092
      - KAFKA_CONTROLLER_LISTENER_NAMES='CONTROLLER'
      - CLUSTER_ID='4L6g3nShT-eMCtK--X86sw'
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_LOG_DIRS='/tmp/kraft-combined-logs'
    networks:
      - bankingapp-network

  kafka-3:
    image: apache/kafka:latest
    hostname: kafka-3
    ports:
      - 49092:9092
    environment:
      - KAFKA_NODE_ID=3
      - KAFKA_PROCESS_ROLES='broker,controller'
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP='CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      - KAFKA_CONTROLLER_QUORUM_VOTERS='1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093'
      - KAFKA_LISTENERS='PLAINTEXT://:19092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092'
      - KAFKA_INTER_BROKER_LISTENER_NAME='PLAINTEXT'
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:19092,PLAINTEXT_HOST://localhost:49092
      - KAFKA_CONTROLLER_LISTENER_NAMES='CONTROLLER'
      - CLUSTER_ID='4L6g3nShT-eMCtK--X86sw'
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_LOG_DIRS='/tmp/kraft-combined-logs'
    networks:
      - bankingapp-network

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - "8185:8081"
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka-1:19092
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081
    networks:
      - bankingapp-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8186:8080"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - schema-registry
    environment:
      - KAFKA_CLUSTERS_NAME=local
      - KAFKA_CLUSTERS_BOOTSTRAPSERVERS=kafka-1:19092,kafka-2:19092,kafka-3:19092
      - KAFKA_CLUSTERS_SCHEMAREGISTRY=http://schema-registry:8081
      - DYNAMIC_CONFIG_ENABLED=true
    networks:
      - bankingapp-network

  loki:
    image: grafana/loki:latest
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    networks:
      - bankingapp-network

  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - bankingapp-network

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./tempo/tempo-data:/tmp/tempo
    ports:
      - "3110:3100"  # Tempo
      - "9411:9411" # zipkin
    networks:
      - bankingapp-network

  grafana:
    image: grafana/grafana-oss:latest
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:    
      - ./grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      - bankingapp-network

  api-gateway:
    image: mochahaulier/api-gateway:latest
    ports:
      - "8181:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:      
      - keycloak
    networks:
      - bankingapp-network

  client-service:
    image: mochahaulier/client-service:latest
    ports:
      - "8282:8080"
    env_file:
      - ./client-service/src/main/resources/.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker    
      - SERVER_PORT=8080 
    depends_on:
      - api-gateway
    networks:
      - bankingapp-network

  product-service:
    image: mochahaulier/product-service:latest
    ports:
      - "8383:8080"
    env_file:
      - ./product-service/src/main/resources/.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker   
      - SERVER_PORT=8080 
    depends_on:
      - api-gateway
    networks:
      - bankingapp-network

  clientproduct-service:
    image: mochahaulier/clientproduct-service:latest
    ports:
      - "8484:8080"
    env_file:
      - ./clientproduct-service/src/main/resources/.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - api-gateway
    networks:
      - bankingapp-network

  transaction-service:
    image: mochahaulier/transaction-service:latest
    ports:
      - "8585:8080"
    env_file:
      - ./transaction-service/src/main/resources/.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3      
      - api-gateway
    networks:
      - bankingapp-network

networks:
  bankingapp-network:
    driver: bridge